<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- src目录下的db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 扫描指定包路径下的带有组件注解的bean并在上下文配置 -->
	<context:component-scan base-package="com.junhao"/> 
	
	<!-- 数据库数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<!-- Spring利用此类获取Hibernate的SessionFactory类 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				
				<!-- 验证实体数据用的，默认为auto -->
				<prop key="javax.persistence.validation.mode">none</prop>
				
				<!-- 采用Spring声明式事务并且使用 getCurrentSession()时从 SpringSessionContext上下文中才能取到当前的session -->
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		
		<!-- xml配置 -->  
		<!--
		<property name="mappingLocations">   
    		<value>classpath:/com/junhao/domain/*.hbm.xml </value>   
		</property> 
		 -->
		 
		<!-- 扫描包下的实体类 -->
		<property name="packagesToScan">
			<list>
				<value>com.junhao.domain</value>
			</list>
		</property>  
		
	</bean>
	
	<!-- 把session绑定到请求线程，解决延迟加载session被关闭时使用子数据出现错误的问题 -->
	<bean id="openSessionInViewInterceptor"  
          class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">  
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean> 
	
	<!-- Spring提供的对Hibernate的事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- @Transactional注解实现事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- aop事务 -->
	<!--
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>  
	    <aop:pointcut id="transactionPointcut" expression="execution(* com.junhao.service.*.*(..))" />
	    <aop:advisor pointcut-ref="transactionPointcut" advice-ref="txAdvice" />  
    </aop:config> 
	-->
</beans>
